# -- Valores por defecto para el despliegue.

# -- Deployment labels

deployLabels: 
  name: "hello-kubernetes-custom-helm"
  product-id: "demo"
  component-id: "hello-kubernetes-custom-helm"

# -- Cantidad de replicas a disponibilizar
replicaCount: 1

# -- Nombre del namespace donde debe desplegarse el aplicativo. No usar default
namespace: "demo"

image: 
  # -- Nombre del repositorio, el cual debe incluir el nombre de la imagen
  repository: "paulbouwer/hello-kubernetes" # Nombre de la imagen
  # -- Pull policy (`Always`, `IfNotPresent`, `Never`)
  pullPolicy: Always
  # -- Sobreescribe el tag de la imagen el cual por defecto es el appVersion del chart
  tag:  "1.8"
# -- reemplaza el nombre del chart en el `Chart.yaml`, cuando se utiliza para construir el nombre de los objetos en Kubernetes
nameOverride: "" 
# -- reemplaza completamente los nombres generados
fullnameOverride: ""

env:
  - name: MESSAGE
    value: Hello World!

# -- puertos del contenedor
containerPorts:
  ports:
    name: http
    containerPort: 8080
    protocol: TCP

# -- POD metadata annotations
podAnnotations: {}

# -- POD labels
podLabels: 
  app: "hello-kubernetes-custom-helm"
  product-id: "demo"
  component-id: "hello-kubernetes-custom-helm"

service: 
  # -- Tipo de Servicio (validos: `NodePort`, `ClusterIP`)
  type: ClusterIP 
  # -- Puerto de exposici√≥n del servicio
  port: 8080
  targetPort: 8080

# -- Service Labels
serviceLabels:
  name: "demo"
  product-id: "demo"
  component-id: "hello-kubernetes-custom-helm"

ingress:
  # -- Si habilita o no el servicio mediante un Ingress
  enabled: true
  # -- Clase del balanceador cuando se expone un Ingress
  className: "alb"
  # -- Nombre del ingress group al que pertenece el Ingress.
  group: "demo.eks"
  # -- Nombre del balanceador al cual debe atacharse el ingress
  loadBalancerName: "demo-eks"
  # -- Typo de objetivo para el target group (`instance`, `ip`)
  targetType: ip
  # -- Annotations extra que pueda necesitar el balanceador
  ## -- New
  scheme: internet-facing
  annotations:
    # -- Puertos a exponer en el balanceador (`json`)
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'

  # -- Parametros de backend del host (`json`)  
  hosts: 
    - paths:
        - path: /*
          pathType: ImplementationSpecific
          backend:
            serviceName: helm-demo-deploy
  # -- usar `servicePort: use-annotation` si el despliegue es de tipo `Canary`
            servicePort: 8080

  # -- Atributo a completar si se utilizar TLS          
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # -- Ajuste de recursos que utilizara el componente para desplegarse. Este parametro debe ser ajustado a conciencia, y evaluado de componente a componente para un uso optimizado de recursos.
  limits:
      # -- Limite de CPU para el POD
      cpu: 100m 
      # -- Limite de Memoria para el POD
      memory: 128Mi 
  requests:
      # -- Request de CPU para el POD
      cpu: 100m 
      # -- Request de Memoria para el POD
      memory: 128Mi 